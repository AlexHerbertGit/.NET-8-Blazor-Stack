@page "/"
@using Microsoft.AspNetCore.Components.Authorization
@inject Web.Services.ApiClient Api

<h3>Meals</h3>

<AuthorizeView Roles="member">
    <div>
        <h4>Create (member)</h4>
        <input @bind="Title" placeholder="Title" />
        <input @bind="Description" placeholder="Description" />
        <input @bind="Tags" placeholder="dietary tags (comma separated)" />
        <input type="number" @bind="Portions" />
        <button @onclick="CreateMeal">Create</button>
        <pre>@CreateResult</pre>
    </div>
</AuthorizeView>

<h4>All Meals</h4>
@if (Meal is null)
{
    <p>Loading…</p>
}
else
{
    @foreach (var m in Meal)
    {
        <div style="border:1px solid #eee;padding:8px;margin:6px 0">
            <b>@m.title</b> — Portions: @m.portionsAvailable
            <div>Dietary: @string.Join(", ", m.dietaryTags ?? Array.Empty<string>())</div>
            <div><small>ID: @m.id</small></div>
        </div>
    }
}

@code {
    MealDto[]? Meal;
    string Title = "", Description = "", Tags = ""; int Portions = 0; string? CreateResult;

    class MealDto { public Guid id { get; set; } public string? title { get; set; } public string? description { get; set; } public string[]? dietaryTags { get; set; } public int portionsAvailable { get; set; } public string? providerId { get; set; } }
    class MealCreate { public string title { get; set; } = ""; public string? description { get; set; } public string[]? dietaryTags { get; set; } public int portionsAvailable { get; set; } }

    protected override async Task OnInitializedAsync()
        => Meal = await Api.Public.GetFromJsonAsync<MealDto[]>("api/meals");

    async Task CreateMeal()
    {
        var body = new MealCreate
        {
            title = Title,
            description = Description,
            dietaryTags = string.IsNullOrWhiteSpace(Tags)
                ? Array.Empty<string>()
                : Tags.Split(',', StringSplitOptions.RemoveEmptyEntries).Select(s => s.Trim()).ToArray(),
            portionsAvailable = Portions
        };
        var res = await Api.Authed.PostAsJsonAsync("api/meals", body);
        CreateResult = $"{(int)res.StatusCode} {res.ReasonPhrase}";
        Meal = await Api.Public.GetFromJsonAsync<MealDto[]>("api/meals");
    }
}
